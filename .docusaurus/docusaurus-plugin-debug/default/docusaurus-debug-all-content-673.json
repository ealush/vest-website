{
  "docusaurus-plugin-content-docs": {
    "default": {
      "loadedVersions": [
        {
          "versionName": "current",
          "versionLabel": "Next",
          "versionPath": "/docs",
          "tagsPath": "/docs/tags",
          "versionEditUrl": "https://github.com/ealush/vest-website/edit/main/docs",
          "versionEditUrlLocalized": "https://github.com/ealush/vest-website/edit/main/i18n/en/docusaurus-plugin-content-docs/current",
          "versionBanner": null,
          "versionBadge": false,
          "versionClassName": "docs-version-current",
          "isLast": true,
          "routePriority": -1,
          "sidebarFilePath": "/Users/ealush/dev/vest-website/sidebars.js",
          "contentPath": "/Users/ealush/dev/vest-website/docs",
          "contentPathLocalized": "/Users/ealush/dev/vest-website/i18n/en/docusaurus-plugin-content-docs/current",
          "mainDocId": "get_started",
          "docs": [
            {
              "unversionedId": "api_reference",
              "id": "api_reference",
              "isDocsHomePage": false,
              "title": "API Reference",
              "description": "Below is a list of all the API functions exposed by Vest.",
              "source": "@site/docs/api_reference.md",
              "sourceDirName": ".",
              "slug": "/api_reference",
              "permalink": "/docs/api_reference",
              "editUrl": "https://github.com/ealush/vest-website/edit/main/docs/api_reference.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 3,
              "frontMatter": {
                "sidebar_position": 3
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Core Concepts",
                "permalink": "/docs/concepts"
              },
              "next": {
                "title": "Vest's Suite",
                "permalink": "/docs/writing_your_suite/vests_suite"
              }
            },
            {
              "unversionedId": "concepts",
              "id": "concepts",
              "isDocsHomePage": false,
              "title": "Core Concepts",
              "description": "Vest is a form validations framework inspired by the syntax and style of unit testing tools like Mocha or Jest, so naturally, using Vest will feel familiar. Under the hood, though, Vest has some differences that make it more suitable for use with form validation.",
              "source": "@site/docs/concepts.md",
              "sourceDirName": ".",
              "slug": "/concepts",
              "permalink": "/docs/concepts",
              "editUrl": "https://github.com/ealush/vest-website/edit/main/docs/concepts.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 2,
              "frontMatter": {
                "sidebar_position": 2
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Getting Started",
                "permalink": "/docs/get_started"
              },
              "next": {
                "title": "API Reference",
                "permalink": "/docs/api_reference"
              }
            },
            {
              "unversionedId": "enforce/builtin-enforce-plugins/compound_rules",
              "id": "enforce/builtin-enforce-plugins/compound_rules",
              "isDocsHomePage": false,
              "title": "Compound rules",
              "description": "Alongside the list of rules that only accept data provided by the user, enforce also supports compound rules - these are rules that accept other rules as their arguments. These rules let you validate more complex scenarios with the ergonomics of enforce.",
              "source": "@site/docs/enforce/builtin-enforce-plugins/compound_rules.md",
              "sourceDirName": "enforce/builtin-enforce-plugins",
              "slug": "/enforce/builtin-enforce-plugins/compound_rules",
              "permalink": "/docs/enforce/builtin-enforce-plugins/compound_rules",
              "editUrl": "https://github.com/ealush/vest-website/edit/main/docs/enforce/builtin-enforce-plugins/compound_rules.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "List of Enforce rules",
                "permalink": "/docs/enforce/enforce_rules"
              },
              "next": {
                "title": "Schema rules",
                "permalink": "/docs/enforce/builtin-enforce-plugins/schema_rules"
              }
            },
            {
              "unversionedId": "enforce/builtin-enforce-plugins/schema_rules",
              "id": "enforce/builtin-enforce-plugins/schema_rules",
              "isDocsHomePage": false,
              "title": "Schema rules",
              "description": "While less common when using Vest, sometimes it might be useful to validate a value against a schema. Vest comes with some schema validation rules that are handy for data-shape validation.",
              "source": "@site/docs/enforce/builtin-enforce-plugins/schema_rules.md",
              "sourceDirName": "enforce/builtin-enforce-plugins",
              "slug": "/enforce/builtin-enforce-plugins/schema_rules",
              "permalink": "/docs/enforce/builtin-enforce-plugins/schema_rules",
              "editUrl": "https://github.com/ealush/vest-website/edit/main/docs/enforce/builtin-enforce-plugins/schema_rules.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 2,
              "frontMatter": {
                "sidebar_position": 2
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Compound rules",
                "permalink": "/docs/enforce/builtin-enforce-plugins/compound_rules"
              },
              "next": {
                "title": "Creating Custom Rules",
                "permalink": "/docs/enforce/creating_custom_rules"
              }
            },
            {
              "unversionedId": "enforce/composing_enforce_rules",
              "id": "enforce/composing_enforce_rules",
              "isDocsHomePage": false,
              "title": "Composing enforce rules",
              "description": "When you have rules that you often use together or different groups of rules that describe the same behavior, you can compose them into a single rule for easier reuse.",
              "source": "@site/docs/enforce/composing_enforce_rules.md",
              "sourceDirName": "enforce",
              "slug": "/enforce/composing_enforce_rules",
              "permalink": "/docs/enforce/composing_enforce_rules",
              "editUrl": "https://github.com/ealush/vest-website/edit/main/docs/enforce/composing_enforce_rules.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 6,
              "frontMatter": {
                "sidebar_position": 6
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Consuming external rules",
                "permalink": "/docs/enforce/consuming_external_rules"
              },
              "next": {
                "title": "classnames",
                "permalink": "/docs/utilities/classnames"
              }
            },
            {
              "unversionedId": "enforce/consuming_external_rules",
              "id": "enforce/consuming_external_rules",
              "isDocsHomePage": false,
              "title": "Consuming external rules",
              "description": "Enforce comes with the bare minimum of rules needed for input validation, not assuming your business logic constraints.",
              "source": "@site/docs/enforce/consuming_external_rules.md",
              "sourceDirName": "enforce",
              "slug": "/enforce/consuming_external_rules",
              "permalink": "/docs/enforce/consuming_external_rules",
              "editUrl": "https://github.com/ealush/vest-website/edit/main/docs/enforce/consuming_external_rules.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 5,
              "frontMatter": {
                "sidebar_position": 5
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Creating Custom Rules",
                "permalink": "/docs/enforce/creating_custom_rules"
              },
              "next": {
                "title": "Composing enforce rules",
                "permalink": "/docs/enforce/composing_enforce_rules"
              }
            },
            {
              "unversionedId": "enforce/creating_custom_rules",
              "id": "enforce/creating_custom_rules",
              "isDocsHomePage": false,
              "title": "Creating Custom Rules",
              "description": "By default, enforce comes with a list of rules that are available to be used. They intentionally do not cover all the cases that can be encountered in a real-world application but instead focus on the most common use cases.",
              "source": "@site/docs/enforce/creating_custom_rules.md",
              "sourceDirName": "enforce",
              "slug": "/enforce/creating_custom_rules",
              "permalink": "/docs/enforce/creating_custom_rules",
              "editUrl": "https://github.com/ealush/vest-website/edit/main/docs/enforce/creating_custom_rules.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 4,
              "frontMatter": {
                "sidebar_position": 4
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Schema rules",
                "permalink": "/docs/enforce/builtin-enforce-plugins/schema_rules"
              },
              "next": {
                "title": "Consuming external rules",
                "permalink": "/docs/enforce/consuming_external_rules"
              }
            },
            {
              "unversionedId": "enforce/enforce",
              "id": "enforce/enforce",
              "isDocsHomePage": false,
              "title": "Enforce",
              "description": "Enforce is Vest's assertion library. It is used to validate values within a Vest test.",
              "source": "@site/docs/enforce/enforce.md",
              "sourceDirName": "enforce",
              "slug": "/enforce/enforce",
              "permalink": "/docs/enforce/enforce",
              "editUrl": "https://github.com/ealush/vest-website/edit/main/docs/enforce/enforce.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Grouping tests",
                "permalink": "/docs/writing_tests/advanced_test_features/grouping_tests"
              },
              "next": {
                "title": "List of Enforce rules",
                "permalink": "/docs/enforce/enforce_rules"
              }
            },
            {
              "unversionedId": "enforce/enforce_rules",
              "id": "enforce/enforce_rules",
              "isDocsHomePage": false,
              "title": "List of Enforce rules",
              "description": "Enforce rules are functions that allow you to test your data against different criteria. The following rules are supported out-of-the-box.",
              "source": "@site/docs/enforce/enforce_rules.md",
              "sourceDirName": "enforce",
              "slug": "/enforce/enforce_rules",
              "permalink": "/docs/enforce/enforce_rules",
              "editUrl": "https://github.com/ealush/vest-website/edit/main/docs/enforce/enforce_rules.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 2,
              "frontMatter": {
                "sidebar_position": 2
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Enforce",
                "permalink": "/docs/enforce/enforce"
              },
              "next": {
                "title": "Compound rules",
                "permalink": "/docs/enforce/builtin-enforce-plugins/compound_rules"
              }
            },
            {
              "unversionedId": "external_resources",
              "id": "external_resources",
              "isDocsHomePage": false,
              "title": "External Learning Resources",
              "description": "Vest's community is still growing, but there are already some excellent usage examples for different frameworks.",
              "source": "@site/docs/external_resources.md",
              "sourceDirName": ".",
              "slug": "/external_resources",
              "permalink": "/docs/external_resources",
              "editUrl": "https://github.com/ealush/vest-website/edit/main/docs/external_resources.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 11,
              "frontMatter": {
                "sidebar_position": 11
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Understanding Vest's state",
                "permalink": "/docs/understanding_state"
              }
            },
            {
              "unversionedId": "get_started",
              "id": "get_started",
              "isDocsHomePage": false,
              "title": "Getting Started",
              "description": "Installation",
              "source": "@site/docs/get_started.md",
              "sourceDirName": ".",
              "slug": "/get_started",
              "permalink": "/docs/get_started",
              "editUrl": "https://github.com/ealush/vest-website/edit/main/docs/get_started.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1
              },
              "sidebar": "tutorialSidebar",
              "next": {
                "title": "Core Concepts",
                "permalink": "/docs/concepts"
              }
            },
            {
              "unversionedId": "migration_guide",
              "id": "migration_guide",
              "isDocsHomePage": false,
              "title": "Upgrade guides",
              "description": "Upgrading from V3 to V4",
              "source": "@site/docs/migration_guide.md",
              "sourceDirName": ".",
              "slug": "/migration_guide",
              "permalink": "/docs/migration_guide",
              "editUrl": "https://github.com/ealush/vest-website/edit/main/docs/migration_guide.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 10,
              "frontMatter": {
                "sidebar_position": 10
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Using Vest in node",
                "permalink": "/docs/recipies/using_with_node"
              },
              "next": {
                "title": "Understanding Vest's state",
                "permalink": "/docs/understanding_state"
              }
            },
            {
              "unversionedId": "recipies/using_with_node",
              "id": "recipies/using_with_node",
              "isDocsHomePage": false,
              "title": "Using Vest in node",
              "description": "Using Vest in node is mostly the same as it is in the browser, but you should consider your runtime.",
              "source": "@site/docs/recipies/using_with_node.md",
              "sourceDirName": "recipies",
              "slug": "/recipies/using_with_node",
              "permalink": "/docs/recipies/using_with_node",
              "editUrl": "https://github.com/ealush/vest-website/edit/main/docs/recipies/using_with_node.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "promisify",
                "permalink": "/docs/utilities/promisify"
              },
              "next": {
                "title": "Upgrade guides",
                "permalink": "/docs/migration_guide"
              }
            },
            {
              "unversionedId": "understanding_state",
              "id": "understanding_state",
              "isDocsHomePage": false,
              "title": "Understanding Vest's state",
              "description": "Vest is designed to help perform validations on user inputs. The nature of user inputs is that they are filled one by one by the user. In order to provide good user experience, the best approach is to validate fields as the user type, or when they leave the field.",
              "source": "@site/docs/understanding_state.md",
              "sourceDirName": ".",
              "slug": "/understanding_state",
              "permalink": "/docs/understanding_state",
              "editUrl": "https://github.com/ealush/vest-website/edit/main/docs/understanding_state.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 10,
              "frontMatter": {
                "sidebar_position": 10
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Upgrade guides",
                "permalink": "/docs/migration_guide"
              },
              "next": {
                "title": "External Learning Resources",
                "permalink": "/docs/external_resources"
              }
            },
            {
              "unversionedId": "utilities/classnames",
              "id": "utilities/classnames",
              "isDocsHomePage": false,
              "title": "classnames",
              "description": "After validating user input, you usually need to also indicate the validation result on the page - most of the times by adding a class to your input element. One of the difficulties you are likely to face is that the logic for setting the class is not always the negation of hasErrors.",
              "source": "@site/docs/utilities/classnames.md",
              "sourceDirName": "utilities",
              "slug": "/utilities/classnames",
              "permalink": "/docs/utilities/classnames",
              "editUrl": "https://github.com/ealush/vest-website/edit/main/docs/utilities/classnames.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Composing enforce rules",
                "permalink": "/docs/enforce/composing_enforce_rules"
              },
              "next": {
                "title": "promisify",
                "permalink": "/docs/utilities/promisify"
              }
            },
            {
              "unversionedId": "utilities/promisify",
              "id": "utilities/promisify",
              "isDocsHomePage": false,
              "title": "promisify",
              "description": "promisify()",
              "source": "@site/docs/utilities/promisify.md",
              "sourceDirName": "utilities",
              "slug": "/utilities/promisify",
              "permalink": "/docs/utilities/promisify",
              "editUrl": "https://github.com/ealush/vest-website/edit/main/docs/utilities/promisify.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 2,
              "frontMatter": {
                "sidebar_position": 2
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "classnames",
                "permalink": "/docs/utilities/classnames"
              },
              "next": {
                "title": "Using Vest in node",
                "permalink": "/docs/recipies/using_with_node"
              }
            },
            {
              "unversionedId": "writing_tests/advanced_test_features/dynamic_tests",
              "id": "writing_tests/advanced_test_features/dynamic_tests",
              "isDocsHomePage": false,
              "title": "Dynamic Tests with `each`",
              "description": "This replaces Vest's test.each which used to have limited capabilities.",
              "source": "@site/docs/writing_tests/advanced_test_features/dynamic_tests.md",
              "sourceDirName": "writing_tests/advanced_test_features",
              "slug": "/writing_tests/advanced_test_features/dynamic_tests",
              "permalink": "/docs/writing_tests/advanced_test_features/dynamic_tests",
              "editUrl": "https://github.com/ealush/vest-website/edit/main/docs/writing_tests/advanced_test_features/dynamic_tests.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 2,
              "frontMatter": {
                "sidebar_position": 2
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "test.memo",
                "permalink": "/docs/writing_tests/advanced_test_features/test.memo"
              },
              "next": {
                "title": "Grouping tests",
                "permalink": "/docs/writing_tests/advanced_test_features/grouping_tests"
              }
            },
            {
              "unversionedId": "writing_tests/advanced_test_features/grouping_tests",
              "id": "writing_tests/advanced_test_features/grouping_tests",
              "isDocsHomePage": false,
              "title": "Grouping tests",
              "description": "In some cases it can be helpful to group tests together so you can include or exclude a portion of the suite with a single condition.",
              "source": "@site/docs/writing_tests/advanced_test_features/grouping_tests.md",
              "sourceDirName": "writing_tests/advanced_test_features",
              "slug": "/writing_tests/advanced_test_features/grouping_tests",
              "permalink": "/docs/writing_tests/advanced_test_features/grouping_tests",
              "editUrl": "https://github.com/ealush/vest-website/edit/main/docs/writing_tests/advanced_test_features/grouping_tests.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 3,
              "frontMatter": {
                "sidebar_position": 3
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Dynamic Tests with `each`",
                "permalink": "/docs/writing_tests/advanced_test_features/dynamic_tests"
              },
              "next": {
                "title": "Enforce",
                "permalink": "/docs/enforce/enforce"
              }
            },
            {
              "unversionedId": "writing_tests/advanced_test_features/test.memo",
              "id": "writing_tests/advanced_test_features/test.memo",
              "isDocsHomePage": false,
              "title": "test.memo",
              "description": "test.memo for memoized tests",
              "source": "@site/docs/writing_tests/advanced_test_features/test.memo.md",
              "sourceDirName": "writing_tests/advanced_test_features",
              "slug": "/writing_tests/advanced_test_features/test.memo",
              "permalink": "/docs/writing_tests/advanced_test_features/test.memo",
              "editUrl": "https://github.com/ealush/vest-website/edit/main/docs/writing_tests/advanced_test_features/test.memo.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Warn-only tests",
                "permalink": "/docs/writing_tests/warn_only_tests"
              },
              "next": {
                "title": "Dynamic Tests with `each`",
                "permalink": "/docs/writing_tests/advanced_test_features/dynamic_tests"
              }
            },
            {
              "unversionedId": "writing_tests/async_tests",
              "id": "writing_tests/async_tests",
              "isDocsHomePage": false,
              "title": "Writing Asynchronous Tests",
              "description": "Sometimes you need to validate your data with information not present in your current context, for example - data from the server, such as username availability. In those cases, you need to go out to the server and fetch data as part of your validation logic.",
              "source": "@site/docs/writing_tests/async_tests.md",
              "sourceDirName": "writing_tests",
              "slug": "/writing_tests/async_tests",
              "permalink": "/docs/writing_tests/async_tests",
              "editUrl": "https://github.com/ealush/vest-website/edit/main/docs/writing_tests/async_tests.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 2,
              "frontMatter": {
                "sidebar_position": 2
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "The Test Function",
                "permalink": "/docs/writing_tests/using_the_test_function"
              },
              "next": {
                "title": "Failing with a custom message",
                "permalink": "/docs/writing_tests/failing_with_a_custom_message"
              }
            },
            {
              "unversionedId": "writing_tests/failing_with_a_custom_message",
              "id": "writing_tests/failing_with_a_custom_message",
              "isDocsHomePage": false,
              "title": "Failing with a custom message",
              "description": "Sometimes your validation logic might result in different failure reasons that are unknown before you run the test. In this case the message argument is not as useful, and instead you should omit it. Vest allows you to provide the message within the test body itself by doing one of the following:",
              "source": "@site/docs/writing_tests/failing_with_a_custom_message.md",
              "sourceDirName": "writing_tests",
              "slug": "/writing_tests/failing_with_a_custom_message",
              "permalink": "/docs/writing_tests/failing_with_a_custom_message",
              "editUrl": "https://github.com/ealush/vest-website/edit/main/docs/writing_tests/failing_with_a_custom_message.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 3,
              "frontMatter": {
                "sidebar_position": 3
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Writing Asynchronous Tests",
                "permalink": "/docs/writing_tests/async_tests"
              },
              "next": {
                "title": "Warn-only tests",
                "permalink": "/docs/writing_tests/warn_only_tests"
              }
            },
            {
              "unversionedId": "writing_tests/using_the_test_function",
              "id": "writing_tests/using_the_test_function",
              "isDocsHomePage": false,
              "title": "The Test Function",
              "description": "The test function represents a single case in your validation suite. It accepts the following arguments:",
              "source": "@site/docs/writing_tests/using_the_test_function.md",
              "sourceDirName": "writing_tests",
              "slug": "/writing_tests/using_the_test_function",
              "permalink": "/docs/writing_tests/using_the_test_function",
              "editUrl": "https://github.com/ealush/vest-website/edit/main/docs/writing_tests/using_the_test_function.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "optional fields",
                "permalink": "/docs/writing_your_suite/optional_fields"
              },
              "next": {
                "title": "Writing Asynchronous Tests",
                "permalink": "/docs/writing_tests/async_tests"
              }
            },
            {
              "unversionedId": "writing_tests/warn_only_tests",
              "id": "writing_tests/warn_only_tests",
              "isDocsHomePage": false,
              "title": "Warn-only tests",
              "description": "By default, a failing test has a severity of error. Sometimes you may need to lower the severity level of a given test to warn so that even when it fails, it should not prevent submission. An example of this would be validating password strength.",
              "source": "@site/docs/writing_tests/warn_only_tests.md",
              "sourceDirName": "writing_tests",
              "slug": "/writing_tests/warn_only_tests",
              "permalink": "/docs/writing_tests/warn_only_tests",
              "editUrl": "https://github.com/ealush/vest-website/edit/main/docs/writing_tests/warn_only_tests.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 4,
              "frontMatter": {
                "sidebar_position": 4
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Failing with a custom message",
                "permalink": "/docs/writing_tests/failing_with_a_custom_message"
              },
              "next": {
                "title": "test.memo",
                "permalink": "/docs/writing_tests/advanced_test_features/test.memo"
              }
            },
            {
              "unversionedId": "writing_your_suite/including_and_excluding/omitWhen",
              "id": "writing_your_suite/including_and_excluding/omitWhen",
              "isDocsHomePage": false,
              "title": "omitWhen - Conditionally omit tests from a suite",
              "description": "In some cases, we need to wish to omit certain portions of our suite in a way that these tests won't run, and will not count against isValid. For example, when we have some tests that are only allowed to run when a certain checkbox is checked by the user.",
              "source": "@site/docs/writing_your_suite/including_and_excluding/omitWhen.md",
              "sourceDirName": "writing_your_suite/including_and_excluding",
              "slug": "/writing_your_suite/including_and_excluding/omitWhen",
              "permalink": "/docs/writing_your_suite/including_and_excluding/omitWhen",
              "editUrl": "https://github.com/ealush/vest-website/edit/main/docs/writing_your_suite/including_and_excluding/omitWhen.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 4,
              "frontMatter": {
                "sidebar_position": 4
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "skipWhen: Conditional Exclusion",
                "permalink": "/docs/writing_your_suite/including_and_excluding/skipWhen"
              },
              "next": {
                "title": "optional fields",
                "permalink": "/docs/writing_your_suite/optional_fields"
              }
            },
            {
              "unversionedId": "writing_your_suite/including_and_excluding/skip_and_only",
              "id": "writing_your_suite/including_and_excluding/skip_and_only",
              "isDocsHomePage": false,
              "title": "Excluding and including tests",
              "description": "When performing validations in real-world scenarios, you may need to only run tests of a single field in your suite, or skip some tests according to some logic. That's why Vest includes skip() and only().",
              "source": "@site/docs/writing_your_suite/including_and_excluding/skip_and_only.md",
              "sourceDirName": "writing_your_suite/including_and_excluding",
              "slug": "/writing_your_suite/including_and_excluding/skip_and_only",
              "permalink": "/docs/writing_your_suite/including_and_excluding/skip_and_only",
              "editUrl": "https://github.com/ealush/vest-website/edit/main/docs/writing_your_suite/including_and_excluding/skip_and_only.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "The Result Object",
                "permalink": "/docs/writing_your_suite/result_object"
              },
              "next": {
                "title": "Including and excluding groups",
                "permalink": "/docs/writing_your_suite/including_and_excluding/skip_and_only_group"
              }
            },
            {
              "unversionedId": "writing_your_suite/including_and_excluding/skip_and_only_group",
              "id": "writing_your_suite/including_and_excluding/skip_and_only_group",
              "isDocsHomePage": false,
              "title": "Including and excluding groups",
              "description": "Similar to the way you use skip and only to include and exclude tests, you can use skip.group and only.group to exclude and include whole groups.",
              "source": "@site/docs/writing_your_suite/including_and_excluding/skip_and_only_group.md",
              "sourceDirName": "writing_your_suite/including_and_excluding",
              "slug": "/writing_your_suite/including_and_excluding/skip_and_only_group",
              "permalink": "/docs/writing_your_suite/including_and_excluding/skip_and_only_group",
              "editUrl": "https://github.com/ealush/vest-website/edit/main/docs/writing_your_suite/including_and_excluding/skip_and_only_group.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 2,
              "frontMatter": {
                "sidebar_position": 2
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Excluding and including tests",
                "permalink": "/docs/writing_your_suite/including_and_excluding/skip_and_only"
              },
              "next": {
                "title": "skipWhen: Conditional Exclusion",
                "permalink": "/docs/writing_your_suite/including_and_excluding/skipWhen"
              }
            },
            {
              "unversionedId": "writing_your_suite/including_and_excluding/skipWhen",
              "id": "writing_your_suite/including_and_excluding/skipWhen",
              "isDocsHomePage": false,
              "title": "skipWhen: Conditional Exclusion",
              "description": "In some cases we might need to skip a test or a group based on a given condition, for example - based on the intermediate state of the currently running suite. To allow this, you can use skipWhen. skipWhen takes a boolean expression and a callback with tests.",
              "source": "@site/docs/writing_your_suite/including_and_excluding/skipWhen.md",
              "sourceDirName": "writing_your_suite/including_and_excluding",
              "slug": "/writing_your_suite/including_and_excluding/skipWhen",
              "permalink": "/docs/writing_your_suite/including_and_excluding/skipWhen",
              "editUrl": "https://github.com/ealush/vest-website/edit/main/docs/writing_your_suite/including_and_excluding/skipWhen.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 3,
              "frontMatter": {
                "sidebar_position": 3
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Including and excluding groups",
                "permalink": "/docs/writing_your_suite/including_and_excluding/skip_and_only_group"
              },
              "next": {
                "title": "omitWhen - Conditionally omit tests from a suite",
                "permalink": "/docs/writing_your_suite/including_and_excluding/omitWhen"
              }
            },
            {
              "unversionedId": "writing_your_suite/optional_fields",
              "id": "writing_your_suite/optional_fields",
              "isDocsHomePage": false,
              "title": "optional fields",
              "description": "By default, all the tests inside Vest are required in order for the suite to be considered as \"valid\". Sometimes your app's logic may allow tests not to be filled out, and you want them not to be accounted for in the suites validity.",
              "source": "@site/docs/writing_your_suite/optional_fields.md",
              "sourceDirName": "writing_your_suite",
              "slug": "/writing_your_suite/optional_fields",
              "permalink": "/docs/writing_your_suite/optional_fields",
              "editUrl": "https://github.com/ealush/vest-website/edit/main/docs/writing_your_suite/optional_fields.md",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "omitWhen - Conditionally omit tests from a suite",
                "permalink": "/docs/writing_your_suite/including_and_excluding/omitWhen"
              },
              "next": {
                "title": "The Test Function",
                "permalink": "/docs/writing_tests/using_the_test_function"
              }
            },
            {
              "unversionedId": "writing_your_suite/result_object",
              "id": "writing_your_suite/result_object",
              "isDocsHomePage": false,
              "title": "The Result Object",
              "description": "Vest validations return a results object that holds all the information regarding the current run and methods to interact with the data.",
              "source": "@site/docs/writing_your_suite/result_object.md",
              "sourceDirName": "writing_your_suite",
              "slug": "/writing_your_suite/result_object",
              "permalink": "/docs/writing_your_suite/result_object",
              "editUrl": "https://github.com/ealush/vest-website/edit/main/docs/writing_your_suite/result_object.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 2,
              "frontMatter": {
                "sidebar_position": 2
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Vest's Suite",
                "permalink": "/docs/writing_your_suite/vests_suite"
              },
              "next": {
                "title": "Excluding and including tests",
                "permalink": "/docs/writing_your_suite/including_and_excluding/skip_and_only"
              }
            },
            {
              "unversionedId": "writing_your_suite/vests_suite",
              "id": "writing_your_suite/vests_suite",
              "isDocsHomePage": false,
              "title": "Vest's Suite",
              "description": "All your validations reside in a Vest suite. The suite is a function that retains a javascript closure with the current validation state, and it returns the result object. It also exposes some methods to interact with the data, reset the state and handle async validations.",
              "source": "@site/docs/writing_your_suite/vests_suite.md",
              "sourceDirName": "writing_your_suite",
              "slug": "/writing_your_suite/vests_suite",
              "permalink": "/docs/writing_your_suite/vests_suite",
              "editUrl": "https://github.com/ealush/vest-website/edit/main/docs/writing_your_suite/vests_suite.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "API Reference",
                "permalink": "/docs/api_reference"
              },
              "next": {
                "title": "The Result Object",
                "permalink": "/docs/writing_your_suite/result_object"
              }
            }
          ],
          "sidebars": {
            "tutorialSidebar": [
              {
                "type": "doc",
                "id": "get_started"
              },
              {
                "type": "doc",
                "id": "concepts"
              },
              {
                "type": "doc",
                "id": "api_reference"
              },
              {
                "type": "category",
                "label": "Writing your suite",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "doc",
                    "id": "writing_your_suite/vests_suite"
                  },
                  {
                    "type": "doc",
                    "id": "writing_your_suite/result_object"
                  },
                  {
                    "type": "category",
                    "label": "Including and Excluding Tests",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "writing_your_suite/including_and_excluding/skip_and_only"
                      },
                      {
                        "type": "doc",
                        "id": "writing_your_suite/including_and_excluding/skip_and_only_group"
                      },
                      {
                        "type": "doc",
                        "id": "writing_your_suite/including_and_excluding/skipWhen"
                      },
                      {
                        "type": "doc",
                        "id": "writing_your_suite/including_and_excluding/omitWhen"
                      }
                    ]
                  },
                  {
                    "type": "doc",
                    "id": "writing_your_suite/optional_fields"
                  }
                ]
              },
              {
                "type": "category",
                "label": "Writing Tests",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "doc",
                    "id": "writing_tests/using_the_test_function"
                  },
                  {
                    "type": "doc",
                    "id": "writing_tests/async_tests"
                  },
                  {
                    "type": "doc",
                    "id": "writing_tests/failing_with_a_custom_message"
                  },
                  {
                    "type": "doc",
                    "id": "writing_tests/warn_only_tests"
                  },
                  {
                    "type": "category",
                    "label": "Advanced Test Features",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "writing_tests/advanced_test_features/test.memo"
                      },
                      {
                        "type": "doc",
                        "id": "writing_tests/advanced_test_features/dynamic_tests"
                      },
                      {
                        "type": "doc",
                        "id": "writing_tests/advanced_test_features/grouping_tests"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "category",
                "label": "Enforce",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "doc",
                    "id": "enforce/enforce"
                  },
                  {
                    "type": "doc",
                    "id": "enforce/enforce_rules"
                  },
                  {
                    "type": "category",
                    "label": "Built In Enforce Plugins",
                    "collapsible": true,
                    "collapsed": true,
                    "items": [
                      {
                        "type": "doc",
                        "id": "enforce/builtin-enforce-plugins/compound_rules"
                      },
                      {
                        "type": "doc",
                        "id": "enforce/builtin-enforce-plugins/schema_rules"
                      }
                    ]
                  },
                  {
                    "type": "doc",
                    "id": "enforce/creating_custom_rules"
                  },
                  {
                    "type": "doc",
                    "id": "enforce/consuming_external_rules"
                  },
                  {
                    "type": "doc",
                    "id": "enforce/composing_enforce_rules"
                  }
                ]
              },
              {
                "type": "category",
                "label": "Utilities",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "doc",
                    "id": "utilities/classnames"
                  },
                  {
                    "type": "doc",
                    "id": "utilities/promisify"
                  }
                ]
              },
              {
                "type": "category",
                "label": "Recipies",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "doc",
                    "id": "recipies/using_with_node"
                  }
                ]
              },
              {
                "type": "doc",
                "id": "migration_guide"
              },
              {
                "type": "doc",
                "id": "understanding_state"
              },
              {
                "type": "doc",
                "id": "external_resources"
              }
            ]
          }
        }
      ]
    }
  },
  "docusaurus-plugin-content-blog": {
    "default": {
      "blogSidebarTitle": "Recent posts",
      "blogPosts": [],
      "blogListPaginated": [],
      "blogTags": {},
      "blogTagsListPath": null
    }
  },
  "docusaurus-plugin-content-pages": {
    "default": [
      {
        "type": "jsx",
        "permalink": "/",
        "source": "@site/src/pages/index.js"
      }
    ]
  },
  "docusaurus-plugin-debug": {
    "default": null
  },
  "docusaurus-theme-classic": {
    "default": null
  },
  "@easyops-cn/docusaurus-search-local": {
    "default": null
  }
}